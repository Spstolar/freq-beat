# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_motif.ipynb.

# %% auto 0
__all__ = ['Motif']

# %% ../nbs/05_motif.ipynb 4
from pretty_midi import Note
from .manager import alter_note

class Motif:
    def __init__(self, contents, end=None):
        self.contents = contents
        self.end = end  # allow the user to supply end if we want some silence after
        if end is None:
            self.end = self.determine_end()
            
    def determine_end(self):
        return max([note.end for note in self.contents])
    
    def concretize(self, beat_length, note_map):
        ratio = beat_length
        return [alter_note(note, ratio=ratio, new_pitch=note_map.get(note.pitch, note.pitch)) for note in self.contents]
